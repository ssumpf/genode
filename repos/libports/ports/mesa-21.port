LICENSE   := GPLv2
VERSION   := 21.0.0
DOWNLOADS := mesa.archive

URL_BASE      := https://archive.mesa3d.org
URL(mesa)     := $(URL_BASE)/mesa-$(VERSION).tar.xz
SHA(mesa)     := e6204e98e6a8d77cf9dc5d34f99dd8e3ef7144f3601c808ca0dd26ba522e0d84

DIR(mesa)     := src/lib/mesa
TAR_OPT(mesa) := --strip-components=1 --files-from $(REP_DIR)/src/lib/mesa-21/files.list
HASH_INPUT    += $(REP_DIR)/src/lib/mesa-21/files.list


#PATCHES := src/lib/mesa/patches/egl.patch
#PATCH_OPT := -p1

SRC = ${DIR(mesa)}

DIRS := include
DIR_CONTENT(include) = $(wildcard $(SRC)/include/*)

DIRS += include/drm-uapi
DIR_CONTENT(include/drm-uapi) = $(wildcard $(SRC)/include/drm-uapi/*.h)

DIRS += include/pci_ids
DIR_CONTENT(include/pci_ids) = $(wildcard $(SRC)/include/pci_ids/*.h)

#
##
## Check for tools
##
$(call check_tool,bison)
$(call check_tool,flex)
$(call check_tool,python)
#
#
##
## Determine python version to use
##
PYTHON := $(notdir $(lastword $(shell which python3 $(addprefix python3.,5 6 7 8))))


ifeq ($(PYTHON),)
default: python_not_installed
python_not_installed:
	$(error mesa requires python3)
else
python_installed:
	$(info Using python: $(PYTHON))
endif
#
##
## Generate files
##
#generated_files = src/lib/mesa/src/compiler/glsl/glsl_parser.cpp \
#                  src/lib/mesa/src/compiler/glsl/glcpp/glcpp-parse.c \
#                  src/lib/mesa/src/compiler/glsl/glcpp/glcpp-lex.c \
#                  src/lib/mesa/src/mesa/program/program_parse.tab.c \
#                  src/lib/mesa/src/mesa/program/lex.yy.c \
#                  src/lib/mesa/src/mapi/shared-glapi/glapi_mapi_tmp.h \
#
generated_files = $(SRC)/src/compiler/glsl/float64_glsl.h \
                  $(SRC)/src/compiler/glsl/glsl_parser.cpp \
                  $(SRC)/src/compiler/glsl/glcpp/glcpp-lex.c \
                  $(SRC)/src/compiler/glsl/glcpp/glcpp-parse.c \
                  $(SRC)/src/compiler/glsl/glsl_lexer.cpp \
                  $(SRC)/src/compiler/glsl/glsl_parser.cpp \
                  $(SRC)/src/compiler/nir/nir_builder_opcodes.h \
                  $(SRC)/src/compiler/nir/nir_constant_expressions.c \
                  $(SRC)/src/compiler/nir/nir_intrinsics.h \
                  $(SRC)/src/compiler/nir/nir_intrinsics.c \
                  $(SRC)/src/compiler/nir/nir_intrinsics_indices.h \
                  $(SRC)/src/compiler/nir/nir_opt_algebraic.c \
                  $(SRC)/src/compiler/nir/nir_opcodes.c \
                  $(SRC)/src/compiler/nir/nir_opcodes.h \
                  $(SRC)/src/compiler/ir_expression_operation.h \
                  $(SRC)/src/compiler/ir_expression_operation_constant.h \
                  $(SRC)/src/compiler/ir_expression_operation_strings.h \
                  $(SRC)/src/compiler/spirv/vtn_generator_ids.h \
                  $(SRC)/src/compiler/spirv/vtn_gather_types.c \
                  $(SRC)/src/compiler/spirv/spirv_info.c \
                  $(SRC)/src/mesa/program/program_parse.tab.c \
                  $(SRC)/src/mapi/shared-glapi/glapi_mapi_tmp.h \
                  $(SRC)/src/mesa/main/dispatch.h \
                  $(SRC)/src/mesa/main/marshal_generated.h \
                  $(SRC)/src/mesa/main/remap_helper.h \
                  $(SRC)/src/mesa/format_fallback.c \
                  $(SRC)/src/mesa/format_info.h \
                  $(SRC)/src/mesa/get_hash.h \
                  $(SRC)/src/util/format/u_format_pack.h \
                  $(SRC)/src/util/format/u_format_table.c \
                  $(SRC)/src/util/format_srgb.c \
                  $(SRC)/src/git_sha1.h

$(SRC)/src/compiler/glsl/float64_glsl.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/util/xxd.py $(subst _,.,$(basename $@)) $@ -n float64_source

CMD(nir_opcodes.h)              = nir_opcodes_h.py
CMD(nir_opcodes.c)              = nir_opcodes_c.py
CMD(nir_builder_opcodes.h)      = nir_builder_opcodes_h.py
CMD(nir_constant_expressions.c) = nir_constant_expressions.py
CMD(nir_opt_algebraic.c)        = nir_opt_algebraic.py

$(SRC)/src/compiler/nir/nir_opcodes.h \
$(SRC)/src/compiler/nir/nir_opcodes.c \
$(SRC)/src/compiler/nir/nir_builder_opcodes.h \
$(SRC)/src/compiler/nir/nir_constant_expressions.c \
$(SRC)/src/compiler/nir/nir_opt_algebraic.c:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/compiler/nir/${CMD($(notdir $@))} > $@

CMD(nir_intrinsics.h)         = nir_intrinsics_h.py
CMD(nir_intrinsics.c)         = nir_intrinsics_c.py
CMD(nir_intrinsics_indices.h) = nir_intrinsics_indices_h.py

$(SRC)/src/compiler/nir/nir_intrinsics.h \
$(SRC)/src/compiler/nir/nir_intrinsics.c \
$(SRC)/src/compiler/nir/nir_intrinsics_indices.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/compiler/nir/${CMD($(notdir $@))} --outdir $(@D)

$(SRC)/src/mapi/shared-glapi/glapi_mapi_tmp.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)mkdir -p $(@D)
	$(VERBOSE)$(PYTHON) $(@D)/../mapi_abi.py --printer shared-glapi \
		$(@D)/../glapi/gen/gl_and_es_API.xml > $@

CMD(ir_expression_operation.h)          = enum
CMD(ir_expression_operation_constant.h) = constant
CMD(ir_expression_operation_strings.h)  = strings

$(SRC)/src/compiler/ir_expression_operation.h \
$(SRC)/src/compiler/ir_expression_operation_constant.h \
$(SRC)/src/compiler/ir_expression_operation_strings.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/compiler/glsl/ir_expression_operation.py ${CMD($(notdir $@))} \
	> $(@D)/$(notdir $@)

CMD(vtn_generator_ids.h) = vtn_generator_ids_h.py $(@D)/spir-v.xml
CMD(vtn_gather_types.c)  = vtn_gather_types_c.py $(@D)/spirv.core.grammar.json
CMD(spirv_info.c)        = spirv_info_c.py $(@D)/spirv.core.grammar.json

$(SRC)/src/compiler/spirv/vtn_generator_ids.h \
$(SRC)/src/compiler/spirv/vtn_gather_types.c \
$(SRC)/src/compiler/spirv/spirv_info.c:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(@D)/${CMD($(notdir $@))} $@

CMD(dispatch.h)          = gl_table.py -m remap_table
CMD(marshal_generated.h) = gl_marshal_h.py
CMD(remap_helper.h)      = remap_helper.py

$(SRC)/src/mesa/main/dispatch.h \
$(SRC)/src/mesa/main/marshal_generated.h \
$(SRC)/src/mesa/main/remap_helper.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/mapi/glapi/gen/${CMD($(notdir $@))} \
	-f $(SRC)/src/mapi/glapi/gen/gl_and_es_API.xml  > $@

$(SRC)/src/git_sha1.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/bin/git_sha1_gen.py --output $@

$(SRC)/src/mesa/format_info.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/mesa/main/format_info.py $(SRC)/src/mesa/main/formats.csv \
	> $@

$(SRC)/src/mesa/format_fallback.c:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/mesa/main/format_fallback.py $(SRC)/src/mesa/main/formats.csv \
	$@


$(SRC)/src/mesa/get_hash.h:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(SRC)/src/mesa/main/get_hash_generator.py \
	-f $(SRC)/src/mapi/glapi/gen/gl_and_es_API.xml \
	> $@

CMD(u_format_pack.h) = --header
$(SRC)/src/util/format/u_format_pack.h \
$(SRC)/src/util/format/u_format_table.c:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(@D)/u_format_table.py $(@D)/u_format.csv ${CMD($(notdir $@))} > $@

$(SRC)/src/util/format_srgb.c:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)$(PYTHON) $(@D)/format_srgb.py > $@

$(SRC)/src/compiler/glsl/glsl_parser.cpp:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)bison  -Wno-deprecated -o $@ -p "_mesa_glsl_" \
		--defines=$(@D)/glsl_parser.h $(@D)/glsl_parser.yy

$(SRC)/src/compiler/glsl/glcpp/glcpp-parse.c:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)bison  -Wno-deprecated -o $@ -p glcpp_parser_ \
		--defines=$(@D)/glcpp-parse.h $(@D)/glcpp-parse.y

$(SRC)/src/mesa/program/program_parse.tab.c:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)bison  -Wno-deprecated -o $@ \
		--defines=$(@D)/program_parse.tab.h $(@D)/program_parse.y

CMD(glcpp-lex.c)    = glcpp-lex.l
CMD(glsl_lexer.cpp) = glsl_lexer.ll

$(SRC)/src/compiler/glsl/glcpp/glcpp-lex.c \
$(SRC)/src/compiler/glsl/glsl_lexer.cpp:
	@$(MSG_GENERATE)$(notdir $@)
	$(VERBOSE)flex -o $@ $(@D)/${CMD($(notdir $@))}


#src/lib/mesa/src/compiler/glsl/glsl_lexer.cpp:
#	@$(MSG_GENERATE)$(notdir $@)
#	$(VERBOSE)flex -o $@ $(@D)/glsl_lexer.ll
#
#src/lib/mesa/src/compiler/glsl/glcpp/glcpp-parse.c:
#	@$(MSG_GENERATE)$(notdir $@)
#	$(VERBOSE)bison  -o $@ -p "glcpp_parser_" --defines=$(@D)/glcpp-parse.h \
#		$(@D)/glcpp-parse.y
#
#src/lib/mesa/src/compiler/glsl/glcpp/glcpp-lex.c:
#	@$(MSG_GENERATE)$(notdir $@)
#	$(VERBOSE)flex  -o $@ $(@D)/glcpp-lex.l
#
#src/lib/mesa/src/mesa/program/program_parse.tab.c:
#	@$(MSG_GENERATE)$(notdir $@)
#	$(VERBOSE)bison -o $@ -p "_mesa_program_" --defines=$(@D)/program_parse.tab.h \
#		$(@D)/program_parse.y
#
#src/lib/mesa/src/mesa/program/lex.yy.c:
#	@$(MSG_GENERATE)$(notdir $@)
#	$(VERBOSE)flex -o $@ $(@D)/program_lexer.l
#
#
default: python_installed $(DOWNLOADS) $(generated_files)

# vi: set ft=make :
