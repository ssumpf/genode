/*
 * \brief  Terminal echo program
 * \author Norman Feske
 * \author Martin Stein
 * \date   2009-10-16
 */

/*
 * Copyright (C) 2009-2017 Genode Labs GmbH
 *
 * This file is part of the Genode OS framework, which is distributed
 * under the terms of the GNU Affero General Public License version 3.
 */

/* Genode includes */
#include <base/component.h>
#include <terminal_session/connection.h>

using namespace Genode;

static unsigned char cmd0[] = {
	0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00 };

static unsigned char cmd1[] = {
	0x03, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa2, 0x89, 0xcc, 0x33, 0xbc, 0xbb,
	0x8b, 0x4f, 0xb6, 0xb0, 0x13, 0x3e, 0xc2, 0xaa, 0xe6, 0xdf, 0x04, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x38, 0x00, 0x38, 0x00,
	0x39, 0x00 };

static unsigned char cmd2[] = {
	0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00
};

struct Main
{
	Terminal::Connection terminal;
	Signal_handler<Main> read_avail;
	char                 read_buffer[255];
	unsigned             index = 0;

	unsigned char *commands[3] { cmd0, cmd1, cmd2 };
	size_t         sizes[3]    { sizeof(cmd0), sizeof(cmd1), sizeof(cmd2) };

	Main& operator=(const Main&) = delete;
	Main(const Main&) = delete;

	void handle_read_avail()
	{
		unsigned num_bytes = terminal.read(read_buffer, sizeof(read_buffer));
		log("got ", num_bytes, " byte(s)");

		if (index > 2) return;
		terminal.write(commands[index], sizes[index]);
		index++;

	}

	Main(Env &env) : terminal(env),
	                 read_avail(env.ep(), *this, &Main::handle_read_avail)
	{
		terminal.read_avail_sigh(read_avail);
		terminal.write(commands[0], sizes[0]);
		index++;
	}
};

void Component::construct(Env &env) { static Main main(env); }
