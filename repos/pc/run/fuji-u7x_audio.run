assert_spec x86_64

set audio_in 1

if {[have_include "power_on/qemu"]} {
	puts "\nAudio_in test running on Qemu is not supported.\n"
	exit 0
}

if {[have_spec linux]} {
	puts "\nAudio_in test running on Linux is not supported.\n"
	exit 0
}

set build_components {
	drivers/audio/pc
	test/audio_in
	test/audio_out
}

build $build_components

create_boot_directory

import_from_depot \
	[depot_user]/src/[base_src] \
	[depot_user]/src/report_rom \
	[depot_user]/src/init \
	[depot_user]/src/acpi_drv \
	[depot_user]/src/pci_decode \
	[depot_user]/src/platform_drv \
	[depot_user]/raw/sof_firmware \
	[depot_user]/src/pc_audio_drv

append config {
<config prio_levels="2">
	<parent-provides>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="CPU"/>
		<service name="ROM"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="RM"/>
	</parent-provides>

	<default caps="200"/>

	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<start name="timer" priority="0">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>

	<start name="drivers_reports" caps="100">
		<binary name="report_rom"/>
		<resource name="RAM" quantum="1M"/>
		<provides>
			<service name="Report"/>
			<service name="ROM"/>
		</provides>
		<config verbose="no">
			<policy label="pci_decode -> system" report="acpi_drv -> acpi"/>
			<policy label="platform_drv -> devices" report="pci_decode -> devices"/>
		</config>
	</start>

	<start name="acpi_drv" caps="350">
		<resource name="RAM" quantum="6M"/>
		<route>
			<service name="Report"> <child name="drivers_reports"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="pci_decode" caps="350">
		<resource name="RAM" quantum="1M"/>
		<route>
			<service name="ROM" label="system"> <child name="drivers_reports"/> </service>
			<service name="Report"> <child name="drivers_reports"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="platform_drv" caps="400" managing_system="yes">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Platform"/>
		</provides>
		<config>
			<report devices="yes"/>
			<policy label_prefix="pc_audio_drv" info="yes">  <pci class="AUDIO"/> <pci class="HDAUDIO"/> </policy>
		</config>
		<route>
			<service name="ROM" label="devices"> <child name="drivers_reports"/> </service>
			<service name="Report"> <child name="drivers_reports"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="mixer_report_rom">
		<binary name="report_rom"/>
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config verbose="yes">
			<default-policy report="audio_drv -> mixer"/>
		</config>
	</start>

	<start name="pc_audio_drv">
		<resource name="RAM" quantum="8M"/>
		<provides>
			<service name="Audio_out"/>
			<service name="Audio_in"/>
		</provides>
		<config report_mixer="true">

			<!-- playback controls -->
			<control type="bool" id="19" channel="0" name="Master Playback Switch" value="true"/>
			<control type="int"  id="18" channel="0" name="Master Playback Volume" value="75" min="0" max="87"/>
			<control type="int"  id="0"  channel="0" name="Headphone Playback Volume" value="87" min="0" max="87"/>
			<control type="int"  id="0"  channel="1" name="Headphone Playback Volume" value="87" min="0" max="87"/>
			<control type="int"  id="2"  channel="0" name="Speaker Playback Volume" value="87" min="0" max="87"/>
			<control type="int"  id="2"  channel="1" name="Speaker Playback Volume" value="87" min="0" max="87"/>

			<!-- capture controls -->
			<control type="bool" id="13" channel="0" name="Capture Switch" value="true"/>
			<control type="int"  id="12" channel="0" name="Capture Volume" value="63" min="0" max="63"/>
			<control type="int"  id="12" channel="1" name="Capture Volume" value="63" min="0" max="63"/>
			<control type="int"  id="5"  channel="0" name="Headset Mic Playback Volume" value="31" min="0" max="31"/>
			<control type="int"  id="5"  channel="1" name="Headset Mic Playback Volume" value="31" min="0" max="31"/>
			<control type="int"  id="32" channel="0" name="Dmic0 Capture Volume" value="50" min="0" max="70"/>
			<control type="int"  id="32" channel="1" name="Dmic0 Capture Volume" value="50" min="0" max="70"/>
		</config>
		<route>
			<service name="Report"> <child name="mixer_report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
}

append_if $audio_in config {
	<start name="test-audio_in">
		<resource name="RAM" quantum="8M"/>
	</start>
}

append_if [expr !$audio_in] config {
	<start name="test-audio_out">
		<resource name="RAM" quantum="4M"/>
		<config>
			<filename>sample.raw</filename>
		</config>
		<route>
			<any-service><parent/><any-child/></any-service>
		</route>
	</start>
}

append config {
</config>
}

install_config $config

set boot_modules [build_artifacts]

lappend_if [expr !$audio_in] boot_modules sample.raw

build_boot_image $boot_modules

run_genode_until forever

# vi: set ft=tcl :
