Build fixes for GCC 12

diff --git a/src/virtualbox6/include/iprt/string.h b/src/virtualbox6/include/iprt/string.h
index 743b114..b7a4def 100644
--- a/src/virtualbox6/include/iprt/string.h
+++ b/src/virtualbox6/include/iprt/string.h
@@ -2649,17 +2649,15 @@ RT_C_DECLS_END
 #if defined(__cplusplus) && !defined(DOXYGEN_RUNNING)
 DECLINLINE(char const *) RTStrEnd(char const *pszString, size_t cchMax)
 {
-    /* Avoid potential issues with memchr seen in glibc.
-     * See sysdeps/x86_64/memchr.S in glibc versions older than 2.11 */
-    while (cchMax > RTSTR_MEMCHR_MAX)
+    while (cchMax-- > 0)
     {
-        char const *pszRet = (char const *)memchr(pszString, '\0', RTSTR_MEMCHR_MAX);
-        if (RT_LIKELY(pszRet))
-            return pszRet;
-        pszString += RTSTR_MEMCHR_MAX;
-        cchMax    -= RTSTR_MEMCHR_MAX;
+        if (*pszString)
+            { }
+        else
+            return pszString;
+        pszString++;
     }
-    return (char const *)memchr(pszString, '\0', cchMax);
+    return NULL;
 }
 
 DECLINLINE(char *) RTStrEnd(char *pszString, size_t cchMax)
@@ -2667,17 +2665,15 @@ DECLINLINE(char *) RTStrEnd(char *pszString, size_t cchMax)
 DECLINLINE(char *) RTStrEnd(const char *pszString, size_t cchMax)
 #endif
 {
-    /* Avoid potential issues with memchr seen in glibc.
-     * See sysdeps/x86_64/memchr.S in glibc versions older than 2.11 */
-    while (cchMax > RTSTR_MEMCHR_MAX)
+    while (cchMax-- > 0)
     {
-        char *pszRet = (char *)memchr(pszString, '\0', RTSTR_MEMCHR_MAX);
-        if (RT_LIKELY(pszRet))
-            return pszRet;
-        pszString += RTSTR_MEMCHR_MAX;
-        cchMax    -= RTSTR_MEMCHR_MAX;
+        if (*pszString)
+            { }
+        else
+            return pszString;
+        pszString++;
     }
-    return (char *)memchr(pszString, '\0', cchMax);
+    return NULL;
 }
 
 RT_C_DECLS_BEGIN
