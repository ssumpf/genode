You cannot call a C-function ('__sw_hweight*') from inline assembly without a
clobber list of non-caller safe registers (different for x86_32 and x86_64), if
the function uses more registers than rax and rdi (in-/output), these registers
do not get restored.

Because we don't have cpu features enabled, call '__sw_hweight*' directly

diff --git a/arch/x86/include/asm/arch_hweight.h b/arch/x86/include/asm/arch_hweight.h
index ba88edd..083775e 100644
--- a/arch/x86/include/asm/arch_hweight.h
+++ b/arch/x86/include/asm/arch_hweight.h
@@ -1,7 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0 */
 #ifndef _ASM_X86_HWEIGHT_H
 #define _ASM_X86_HWEIGHT_H
-
 #include <asm/cpufeatures.h>
 
 #ifdef CONFIG_64BIT
@@ -14,13 +13,7 @@
 
 static __always_inline unsigned int __arch_hweight32(unsigned int w)
 {
-	unsigned int res;
-
-	asm (ALTERNATIVE("call __sw_hweight32", "popcntl %1, %0", X86_FEATURE_POPCNT)
-			 : "="REG_OUT (res)
-			 : REG_IN (w));
-
-	return res;
+	return __sw_hweight32(w);
 }
 
 static inline unsigned int __arch_hweight16(unsigned int w)
@@ -42,14 +35,9 @@ static inline unsigned long __arch_hweight64(__u64 w)
 #else
 static __always_inline unsigned long __arch_hweight64(__u64 w)
 {
-	unsigned long res;
-
-	asm (ALTERNATIVE("call __sw_hweight64", "popcntq %1, %0", X86_FEATURE_POPCNT)
-			 : "="REG_OUT (res)
-			 : REG_IN (w));
-
-	return res;
+	return __sw_hweight64(w);
 }
+
 #endif /* CONFIG_X86_32 */
 
 #endif
